rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /integrations/{integrationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    match /shelves/{shelfId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null || request.auth.token.admin == true;
    }
    match /sources/{sourceId} {
      allow read: if request.auth != null;
    }
    match /items/{itemId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null || request.auth.token.admin == true;
    }
  }
}

// request.auth != null: Ensures the user is authenticated.
// request.auth.uid == userId: Ensures the user can only read/write their own data.
// request.auth.uid == resource.data.userId: Ensures users can only access documents where they are the owner (userId field matches their UID).